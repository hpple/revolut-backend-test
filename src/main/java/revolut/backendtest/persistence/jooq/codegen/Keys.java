/*
 * This file is generated by jOOQ.
 */
package revolut.backendtest.persistence.jooq.codegen;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import revolut.backendtest.persistence.jooq.codegen.tables.Accounts;
import revolut.backendtest.persistence.jooq.codegen.tables.Transfers;
import revolut.backendtest.persistence.jooq.codegen.tables.records.AccountsRecord;
import revolut.backendtest.persistence.jooq.codegen.tables.records.TransfersRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Identities0.IDENTITY_ACCOUNTS;
    public static final Identity<TransfersRecord, Long> IDENTITY_TRANSFERS = Identities0.IDENTITY_TRANSFERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> CONSTRAINT_A = UniqueKeys0.CONSTRAINT_A;
    public static final UniqueKey<TransfersRecord> CONSTRAINT_E = UniqueKeys0.CONSTRAINT_E;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TransfersRecord, AccountsRecord> CONSTRAINT_E4 = ForeignKeys0.CONSTRAINT_E4;
    public static final ForeignKey<TransfersRecord, AccountsRecord> CONSTRAINT_E4D = ForeignKeys0.CONSTRAINT_E4D;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Internal.createIdentity(Accounts.ACCOUNTS, Accounts.ACCOUNTS.ACCOUNT_ID);
        public static Identity<TransfersRecord, Long> IDENTITY_TRANSFERS = Internal.createIdentity(Transfers.TRANSFERS, Transfers.TRANSFERS.TRANSFER_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountsRecord> CONSTRAINT_A = Internal.createUniqueKey(Accounts.ACCOUNTS, "CONSTRAINT_A", Accounts.ACCOUNTS.ACCOUNT_ID);
        public static final UniqueKey<TransfersRecord> CONSTRAINT_E = Internal.createUniqueKey(Transfers.TRANSFERS, "CONSTRAINT_E", Transfers.TRANSFERS.TRANSFER_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<TransfersRecord, AccountsRecord> CONSTRAINT_E4 = Internal.createForeignKey(revolut.backendtest.persistence.jooq.codegen.Keys.CONSTRAINT_A, Transfers.TRANSFERS, "CONSTRAINT_E4", Transfers.TRANSFERS.FROM_ACCOUNT_ID);
        public static final ForeignKey<TransfersRecord, AccountsRecord> CONSTRAINT_E4D = Internal.createForeignKey(revolut.backendtest.persistence.jooq.codegen.Keys.CONSTRAINT_A, Transfers.TRANSFERS, "CONSTRAINT_E4D", Transfers.TRANSFERS.TO_ACCOUNT_ID);
    }
}
